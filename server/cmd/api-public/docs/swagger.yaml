basePath: /
definitions:
  auth.loginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  auth.loginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/user.Response'
    type: object
  auth.registerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  auth.verifyEmailRequest:
    properties:
      email:
        type: string
      token:
        type: string
    required:
    - email
    - token
    type: object
  book.ImagesResponse:
    properties:
      colors:
        items:
          type: string
        type: array
      inkUrl:
        type: string
      mainUrl:
        type: string
      mediumUrl:
        type: string
      pixelBase64:
        type: string
      smallUrl:
        type: string
    required:
    - colors
    - inkUrl
    - mainUrl
    - mediumUrl
    - pixelBase64
    - smallUrl
    type: object
  book.MetadataResponse:
    properties:
      ageGroups:
        items:
          type: string
        type: array
      authors:
        items:
          type: string
        type: array
      description:
        type: string
      ean:
        type: string
      genres:
        items:
          type: string
        type: array
      isbn:
        type: string
      moods:
        items:
          type: string
        type: array
      pacingTypes:
        items:
          type: string
        type: array
      pageCount:
        type: integer
      publishedAt:
        type: string
      publisher:
        type: string
      settings:
        items:
          type: string
        type: array
      themes:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - authors
    - description
    - isbn
    - pageCount
    - publishedAt
    - publisher
    - title
    type: object
  book.Response:
    properties:
      archivedAt:
        type: string
      createdAt:
        type: string
      id:
        type: string
      images:
        $ref: '#/definitions/book.ImagesResponse'
      metadata:
        $ref: '#/definitions/book.MetadataResponse'
      updatedAt:
        type: string
    required:
    - createdAt
    - id
    - images
    - metadata
    - updatedAt
    type: object
  controller.HTTPError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  health.healthResponse:
    properties:
      ok:
        type: boolean
    type: object
  user.OrganizationResponse:
    properties:
      id:
        type: string
      permissions:
        $ref: '#/definitions/user.PermissionsResponse'
    required:
    - id
    - permissions
    type: object
  user.PermissionsResponse:
    properties:
      delete:
        type: boolean
      read:
        type: boolean
      update:
        type: boolean
    required:
    - delete
    - read
    - update
    type: object
  user.ProjectResponse:
    properties:
      id:
        type: string
      permissions:
        $ref: '#/definitions/user.PermissionsResponse'
    required:
    - id
    - permissions
    type: object
  user.Response:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      isEmailVerified:
        type: boolean
      name:
        type: string
      organizations:
        items:
          $ref: '#/definitions/user.OrganizationResponse'
        type: array
      projects:
        items:
          $ref: '#/definitions/user.ProjectResponse'
        type: array
      role:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - email
    - id
    - isEmailVerified
    - name
    - organizations
    - projects
    - role
    - updatedAt
    type: object
info:
  contact: {}
  description: Public API for @codeserk / media
  title: Media API / Public
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login using credentials
      operationId: login
      parameters:
      - description: Login request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HTTPError'
      summary: Login
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register using email and credentials
      operationId: register
      parameters:
      - description: Register request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HTTPError'
      summary: Register
      tags:
      - auth
  /api/v1/auth/send-verify-email:
    post:
      consumes:
      - application/json
      description: Re-sends the verification email
      operationId: sendVerifyEmail
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Send verify email
      tags:
      - auth
  /api/v1/auth/verify-email:
    post:
      consumes:
      - application/json
      description: Verifies the user email
      operationId: verifyEmail
      parameters:
      - description: Verify email request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.verifyEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HTTPError'
      summary: Verify email
      tags:
      - auth
  /api/v1/books/isbn/{isbn}:
    get:
      consumes:
      - application/json
      description: Search books using a query
      operationId: searchBooks
      parameters:
      - description: ISBN to look for
        in: path
        name: isbn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/book.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HTTPError'
      summary: Search
      tags:
      - books
  /health:
    get:
      consumes:
      - application/json
      description: Endpoint to make sure the application is healthy
      operationId: health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.healthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controller.HTTPError'
      summary: Health endpoint
      tags:
      - health
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  Signature:
    in: header
    name: x-signature
    type: apiKey
  SignatureApp:
    in: header
    name: x-signature-app
    type: apiKey
swagger: "2.0"
